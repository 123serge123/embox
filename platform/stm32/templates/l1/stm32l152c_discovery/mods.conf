package genconfig

configuration conf {
	include embox.arch.system(core_freq=32000000)
	@Runlevel(0) include embox.arch.arm.cortexm3.bundle
	include embox.arch.arm.armmlib.locore
	include embox.arch.arm.libarch
	include embox.arch.arm.vfork
	include platform.stm32.l1.stm32l152c_discovery.bsp

	@Runlevel(1) include embox.driver.interrupt.cortexm_nvic
	@Runlevel(1) include embox.driver.clock.cortexm_systick
	include embox.kernel.time.jiffies(cs_name="cortexm_systick")

//	@Runlevel(1) include embox.driver.serial.stm_usart_f2
//	@Runlevel(1) include embox.driver.serial.stm_diag(baud_rate=115200, usartx=3)
//	@Runlevel(1) include embox.driver.diag(impl="embox__driver__serial__stm_diag")
//	@Runlevel(1) include embox.driver.serial.stm_ttyS0(baud_rate=115200, usartx=3)

	@Runlevel(1) include embox.driver.diag.mem_diag
	@Runlevel(1) include embox.driver.diag(impl="embox__driver__diag__mem_diag")
	@Runlevel(1) include embox.driver.serial.core_notty

	include embox.driver.periph_memory_stub

	include embox.kernel.critical
	include embox.kernel.irq_static
	include embox.kernel.spinlock(spin_debug=false)
	include embox.kernel.stack(stack_size=4096,alignment=4)

	include embox.kernel.task.multi
	include embox.kernel.task.resource.idesc_table(idesc_table_size=8)
	include embox.kernel.task.resource.sig_table(sig_table_size=20)
	include embox.kernel.task.resource.env(env_per_task=4,env_str_len=64)

	include embox.kernel.sched.strategy.priority_based

//	include embox.kernel.thread.signal.siginfoq(siginfo_pool_sz=4)
	include embox.kernel.thread.signal_stub
	include embox.kernel.thread.thread_local_none
	include embox.kernel.thread.thread_cancel_disable
	include embox.kernel.thread.core(thread_pool_size=0, thread_stack_size=4096)
	include embox.kernel.thread.mutex

	@Runlevel(1) include embox.kernel.timer.sys_timer(timer_quantity=8)
	@Runlevel(1) include embox.kernel.timer.strategy.head_timer
	@Runlevel(1) include embox.kernel.time.kernel_time
	@Runlevel(1) include embox.kernel.timer.itimer(itimer_quantity=4)

	include embox.fs.driver.devfs_stub

	include embox.framework.LibFramework

	include embox.compat.libc.stdio.print(support_floating=0)
	include embox.compat.libc.stdio.scanf
//	include embox.compat.libc.stdio.file_ops
//	include embox.compat.posix.index_descriptor
//	include embox.compat.posix.file_system_dvfs

	include embox.mem.heap_bm
	include embox.mem.static_heap(heap_size=0x4000)
	include embox.mem.bitmask(page_size=64)
}
